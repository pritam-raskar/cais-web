server:
  port: ${PORT:8081}
  error:
    include-message: always

spring:
  application:
    name: cais-alert-service

  # PostgreSQL Configuration
  datasource:
    url: jdbc:postgresql://cais-db-main.clemsk88yp4y.us-east-1.rds.amazonaws.com:5432/case_manager
    username: admin01
    password: CaisSimplePassword123
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: info_alert
        format_sql: true
    hibernate:
      ddl-auto: none
    show-sql: true
    open-in-view: false

  # JWT Configuration
  jwt:
    secret: dGhpc2lzYXZlcnlsb25nc2VjcmV0a2V5Zm9yand0Z2VuZXJhdGlvbg==
    expiration: 86400000

  # MongoDB Configuration
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb+srv://cmpadmin:MyCmpPasswd@caiscluster01.k3frl5v.mongodb.net/CMP_DB}
      database: ${MONGODB_DATABASE:CMP_DB}

  mongodb:
    atlas:
      search:
        index: dynamic

  # Multipart Configuration
  servlet:
    multipart:
      enabled: true
      max-file-size: 100MB
      max-request-size: 100MB

# Logging Configuration
logging:
  file:
    name: ${LOG_FILE:${LOG_PATH:${user.home}/logs}/cais-alert-service.log}
    path: ${LOG_PATH:${user.home}/logs}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  level:
    root: INFO
    com.dair.cais: DEBUG
    org.springframework: WARN
    org.hibernate:
      SQL: WARN
      type.descriptor.sql.BasicBinder: TRACE
    com.zaxxer.hikari: WARN
    org.mongodb.driver: WARN

# Storage Configuration
storage:
  type: ${STORAGE_TYPE:s3}
  location: ${STORAGE_LOCATION:/tmp/storage}
  s3:
    bucket-name: ${S3_BUCKET_NAME:alert-attachements}

# AWS Configuration
cloud:
  aws:
    region:
      static: ${AWS_REGION:us-east-1}
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID:}
      secret-key: ${AWS_SECRET_ACCESS_KEY:}
    stack:
      auto: false

# Encryption Configuration
encryption:
  key: fef41ed234b3fa29d8ccaee771a4002e19e77022c10fc193eeab6c23b13e24c1


# Management Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when_authorized
  health:
    db:
      enabled: true
    mongo:
      enabled: true


reports:
  execution:
    page-size: 50  # Default page size for report execution